# RubyEncoder v2.6
if not self.respond_to?(:RGLoader_load,:include_private) then _d = _d0 = File.expand_path(File.dirname(__FILE__)); while 1 do _f = _d + '/rgloader/loader.rb'; break if File.exist?(_f); _d1 = File.dirname(_d); if _d1 == _d then raise "Ruby script '"+__FILE__+"' is protected by RubyEncoder and requires a RubyEncoder loader to be installed. Please visit the https://www.rubyencoder.com/loaders/ RubyEncoder web site to download the required loader and unpack it into '"+_d0+"/rgloader/' directory in order to run this protected file."; exit; else _d = _d1; end; end; require _f; end; RGLoader_load('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');
